{"version":3,"sources":["scripts/main.js"],"names":["table","document","querySelector","tableBody","cols","querySelectorAll","rows","salaryToNumber","salary","split","join","forEach","col","addEventListener","e","element","target","closest","index","indexOf","sortedRows","sort","a","b","elementA","children","innerText","elementB","toLowerCase","localeCompare","append"],"mappings":";AAAA,aAWA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EATA,IAAMA,EAAQC,SAASC,cAAc,SAC/BC,EAAYH,EAAME,cAAc,SAChCE,EAAOJ,EAAMK,iBAAiB,MAC9BC,EAAOH,EAAUE,iBAAiB,MAExC,SAASE,EAAeC,GACf,OAAEA,EAAOC,MAAM,KAAKC,KAAK,IAAID,MAAM,KAAKC,KAAK,IAGtDN,EAAKO,QAAQ,SAAAC,GACXA,EAAIC,iBAAiB,QAAS,SAACC,GACvBC,IAAAA,EAAUD,EAAEE,OAAOC,QAAQ,MAC3BC,EAAQ,EAAId,GAAMe,QAAQJ,GAC1BK,EAAiBd,EAAAA,GAEvBc,EAAWC,KAAK,SAACC,EAAGC,GACZC,IAAAA,EAAWF,EAAEG,SAASP,GAAOQ,UAC7BC,EAAWJ,EAAEE,SAASP,GAAOQ,UAE/BX,MAAoC,WAApCA,EAAQW,UAAUE,cACbrB,EAAeiB,GAAYjB,EAAeoB,GAG5CH,EAASK,cAAcF,KAGhCxB,EAAU2B,OAAV3B,MAAAA,EAAoBiB,EAAAA","file":"main.32d1e213.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst table = document.querySelector('table');\nconst tableBody = table.querySelector('tbody');\nconst cols = table.querySelectorAll('th');\nconst rows = tableBody.querySelectorAll('tr');\n\nfunction salaryToNumber(salary) {\n  return +(salary.split('$').join('').split(',').join(''));\n}\n\ncols.forEach(col => {\n  col.addEventListener('click', (e) => {\n    const element = e.target.closest('th');\n    const index = [...cols].indexOf(element);\n    const sortedRows = [...rows];\n\n    sortedRows.sort((a, b) => {\n      const elementA = a.children[index].innerText;\n      const elementB = b.children[index].innerText;\n\n      if (element.innerText.toLowerCase() === 'salary') {\n        return salaryToNumber(elementA) - salaryToNumber(elementB);\n      }\n\n      return elementA.localeCompare(elementB);\n    });\n\n    tableBody.append(...sortedRows);\n  });\n});\n"]}